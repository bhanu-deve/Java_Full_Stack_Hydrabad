JSP 
===
JSP stands for Java Server Pages.
JSP is a dynamic web resource program that is used to develop web applications.

Limitations with Servlets 
==========================
> To work with servlets strong java knowledge is required.

> It is not suitable for non-java programmers.

> It does not provide implicit objects. 

> Configuration of each servlet program is mandatory.

> Handling exceptions is mandatory.

> We can't maintain HTML code and Java code seperately.

To overcome above limitations we need to use JSP.


Advantage of JSP 
================
> It work with JSP strong java knowledge is not required.

> It is suitable for java and non-java programmers.

> It supports tag based language.

> It allows us to work with custom tags and third party supplied tags.

> It gives 9 implicit objects.

> Configuration of jsp program is optional.

> Handling exceptions is optional.

> We can maintain HTML code and Java code seperately.

> It contains all the features of servlets.

	
First web application development having JSP program as web resource program 
===========================================================================

Deployment Directory Structure 
------------------------------
JspApp1
|
|---Java Resources
|
|---WebContent 
	|
	|---ABC.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

ABC.jsp 
-------
<center>
	<h1>
		Current Date and Time : <br>
		<%
			java.util.Date d = new java.util.Date();
		    out.println(d);
		%> 
	</h1>
</center>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>ABC.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
----------
	http://localhost:2525/JspApp1/




Configuration of JSP program in web.xml file 
============================================

Deployment Directory Structure 
------------------------------
JspApp1
|
|---Java Resources
|
|---WebContent 
	|
	|---ABC.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

ABC.jsp 
-------
<center>
	<h1>
		Current Date and Time : <br>
		<%
			java.util.Date d = new java.util.Date();
		    out.println(d);
		%> 
	</h1>
</center>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <servlet>
  	<servlet-name>ABC</servlet-name>
  	<jsp-file>/ABC.jsp</jsp-file>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>ABC</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>


Request url
----------
	http://localhost:2525/JspApp1/test 
	http://localhost:2525/JspApp1/ABC.jsp 	


How can we access our web application only by using url pattern
===============================================================
To make our application accessible only by using url pattern but not with file name then we need to keep ABC.jsp file inside "WEB-INF" folder.


Deployment Directory Structure 
------------------------------
JspApp1
|
|---Java Resources
|
|---WebContent 
	|
	|---WEB-INF
		|
		|---ABC.jsp 
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

ABC.jsp 
-------
<center>
	<h1>
		Current Date and Time : <br>
		<%
			java.util.Date d = new java.util.Date();
		    out.println(d);
		%> 
	</h1>
</center>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <servlet>
  	<servlet-name>ABC</servlet-name>
  	<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>ABC</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>


Request url
----------
	http://localhost:2525/JspApp1/test 
	http://localhost:2525/JspApp1/ABC.jsp 	(Invalid)


JSP Life Cycle Methods 
=======================
We have three life cycle methods in JSP.

1) _jspInit() 
-------------
	It is used for instantiation event.
	This method will execute just before JES class object creation.

2) _jspService()
--------------
	It is used for request arrival event.
	This method will execute when request goes to JSP program.

3) _jspDestroy()
--------------
	It is used for destruction event.
	This method will execute just before JES class object destruction.


Phases of JSP 
=============
We have two phases in JSP 

1) Translation phase 
------------------
	In translation phase, our JSP program converts to JES class.

2) Request Processing phase 
---------------------------
	In request processing phase, our JES class will be executed and result sends to 
	browser window as dynamic response.

Diagram: jsp1.1

Q) How to enable <load-on-startup> and what happens if we enable <load-on-startup>?

We can enable <load-on-startup> inside web.xml file.

web.xml
-------
<web-app >
  
  <servlet>
  	<servlet-name>ABC</servlet-name>
  	<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>ABC</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>	

If we enable <load-on-startup> then our container creates JES class object during the server startup or during the deployment of web application.

In short, a web container performs translation phase during the server startup or during the deployment of web application.


Q) What is the difference between servlets and JSP ?

Servlets					JSP 
---------					----
It supports annotations.			It does not support annotations.

It does not support tags.			It supports tags.

It is faster.					It is slower.

It does not give implicit objects.		It gives 9 implicit objects.

Configuration of servlet program is mandatory.	Configuration of jsp program is optional.

Handling exceptions is mandatory.		Handling excpetions is optional.

We can't maintain html code and java code 	We can maintain html code and java code 
seperately.					seperately.


Note:
-----
Servlet container executes servlet program directly.
JSP container can't execute jsp program directly. It takes the support of servlet container for execution. Hence for every JSP program a JES(Java Equivalent Servlet) class will be created.



Q) What is the difference between HTML and JSP ?

HTML						JSP 
-----						------
HTML stands for Hypertext Markup Language.	JSP stands for Java Server Pages.

It is a static web resource program to create	It is a dynamic web resource program to create
static web pages.				dynamic web pages.

It requires browser window for execution.	It requires server for execution.

We can't create custom tags.			We can create custom tags.

It is used to develop client side components.	It is used to develop server side components.





















