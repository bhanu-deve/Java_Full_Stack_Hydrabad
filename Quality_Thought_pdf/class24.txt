Various ways to declare the methods in java
===========================================
There are four ways to declare the methods in java.

1) No return type with No argument method 

2) No return type with Argument method 

3) With return type with No argument method 

4) With return type with Argument method


1) No return type with No argument method 
------------------------------------------
If we don't have arguments then we need to ask input values inside callie method.


Q) Write a java program to perform sum of two numbers using no return type with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		sum();
	}
	
	//callie method 
	public static void sum()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt();
		
		int c = a + b;
		
		System.out.println("sum of two numbers is ="+c);
	}
}

Q) Write a java program to display 10 natural numbers using no returntype with no argument method?

class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		display();
	}
	//callie method 
	public static void display()
	{
		for(int i=1;i<=10;i++)
		{
			System.out.print(i+" ");
		}
	}	
}


2) No return type with Argument method 
----------------------------------------
If we have arguments then we need to ask input values inside main method.
Number of arguments depends upon number of inputs.


Q) Write a java program to perform sum of two numbers using no returntype with argument method?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt(); // 10 
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt(); // 20 
		
		//caller method 
		sum(a,b);
	}
	//callie method 
	public static void sum(int a,int b)
	{
		int c = a + b;
		System.out.println("Sum of two numbers is ="+c);
	}
}

Q) Write a java program to perform cube of a given number using no return type with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n = sc.nextInt(); //5 
		
		//caller method 
		cube(n);
	}
	//callie method 
	public static void cube(int n)
	{
		int result = (int) Math.pow(n,3);
		System.out.println("Cube of a given number is ="+result);
	}
}

3) With return type with No argument method 
-------------------------------------------
Here returntype is completely depends upon output datatype.


Q) Write a java program to perform sum of two numbers using with returntype with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		int k = sum();
		System.out.println("Sum of two numbers is ="+k);
	}
	//callie method 
	public static int sum()
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt();
		
		int c = a + b;
		
		return c;
	}
}


Q) Write a java program to find out area of a circle using with return type with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		double k = circle();
		System.out.printf("Area of a circle is = %.2f",k);
	}
	//callie method 
	public static double circle()
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the radius :");
		int r = sc.nextInt();
		
		double area = Math.PI*Math.pow(r,2);
		
		return area;
	}
}


4) With return type with Argument method
-----------------------------------------


Q) Write a java program to perform sum of two number using with returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a = sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt();
		
		//caller method 
		System.out.println("sum of two numbers is ="+sum(a,b));
	}
	//callie method 
	public static int sum(int a,int b)
	{
		int c = a + b;
		return c;
	}
}


Q) Write a java program to check given number is even or odd using with returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number :");
		int n = sc.nextInt();//6 
		
		//caller method 
		if(find(n))
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}
	//callie method 
	public static boolean find(int n)
	{
		if(n%2==0)
			return true;
		else
			return false;
	}
}

Recursion 
=========
A method which call itself for many number of times is called recursion.

Recursion is similar to loops. Whenever we use recursion we should not use loops.

When we don't know perticular condition assume that recursion has taken place.

Q) Write a java program to display 10 natural numbers without using loops?

class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		display(1);
	}
	//callie method 
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" ");// 1 2 3 4 5 6 7 8 9 10
			
			display(i+1);
		}
	}
}


Q) Write a java program to perform sum of two numbers without using arithmetic operator?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a = sc.nextInt(); // 5 
		
		System.out.println("Enter the second number :");
		int b = sc.nextInt(); // 10
		
		//caller method 
		System.out.println(sum(a,b));
	}
	//callie method 
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;
		
		return sum(--a,++b);
	}
}


Q) Write a java program to display factorial of a given number using recursion?

input:
	5

output:
	120 

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number :");
		int n = sc.nextInt();// 5 
		
		//caller method 
		System.out.println(factorial(n));
	}
	//callie method 
	public static int factorial(int n)
	{
		if(n<0)
			return -1;
		
		if(n==0)
			return 1;
		
		return n*factorial(n-1);
	}
}


Q) Write a java program to find out N-th element of fibonacci series?

Fibonacci sequence : 0 1 1 2 3 5 8 ......

input:
	4

output:
	2	

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n = sc.nextInt();
	
		//caller method 
		System.out.println(fib(n));
	}
	//callie method 
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if(n==2)
			return 1;
		
		return fib(n-1)+fib(n-2);
			
	}
}

Assignment 
===========
Q) Write a java program to display reverse of a given number using recursion?

Q) Write a java program to check given number is palindrome or not using 4 ways?



































































