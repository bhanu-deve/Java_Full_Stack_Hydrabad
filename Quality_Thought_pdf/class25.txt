Arrays 
=======
In normal variable we can store only one value at a time.

To store multiple values in a single variable then we need to use arrays.

Array is a collection of homogeneous data elements.

The main advantages of arrays are

1) We can represent multiple elements using single variable name.
   ex:
	int[] arr={10,20,30};

2) Performance point of view arrays are recommanded to use.

The main disadvantages of arrays are 

1) Array are fixed in size. Once if we create an array there is no chance of increasing or 
   decreasing the size of an array.

2) To use array concept in advanced we should know what is the size of an array which is always
   not possible.

In java arrays are divided into three types.

1) Single Dimensional Array 

2) Double Dimensional Array 

3) Multi Dimensional Array 



Array Declaration 
==================

At the time of array declaration we should not specify array size.

1) Single dimensional array 
------------------------
	int[] arr;
	int  []arr;
	int  arr[];

2) Double dimensional array 
---------------------
	int[][] arr;
	int  [][]arr;
	int  arr[][];
	int[]  []arr;
	int[]  arr[];
	int   []arr[];

3) Multi Dimensional array 
----------------------------
	int[][][] arr;
	int  [][][]arr;
	int arr[][][];
	int[][]  []arr;
	int[][]  arr[];
	int[]  [][]arr;
	int[]  arr[][];
	int[]  []arr[];
	int  [][]arr[];
	int  []arr[][];

Array Creation 
===============
In java , every array consider as an object. Hence we will use new operator to create an array.

Diagram: class25.1

Rules to constructor an array 
----------------------------
Rule1:
------
	At the time of array creation compulsary we need to specify array size.
	ex:
		int[] arr=new int[3];
		int[] arr=new int[]; // C.T.E Array Dimension Missing 

Rule2:
------
	It is legal to have an array size with zero.
	ex:
		int[] arr=new int[0];
		System.out.println(arr.length); // 0 

Rule3:
------
	We can't take negative number as an array size otherwise we will get runtime exception
	called NegativeArraySizeException.
	ex:	
		int[] arr = new int[3];
		int[] arr = new int[-3]; // R.E NegativeArraySizeException 

Rule4:
----
	The allowed datatype for an array size is byte,short,int and char.
	If we take other datatypes then we will get compile time error.
	ex:
		int[] arr = new int['a'];

		byte b=10;
		int[] arr = new int[b];

		int[] arr = new int[10.5d]; // C.T.E 


Rule5:
------
	The maximum length we can take for an array size is maximum length of integer.
	ex:
		int[] arr = new int[2147483647];

	
Array Initialization 
====================
Whenever array is created then every array element is initialized with default values.

If we are not happy with default values then we can change with customized values.

Diagram: class25.2


Array Declaration , Creation and Initialization using single line 
=================================================================

	int[] arr;
	arr = new int[3];
	arr[0]=10;
	arr[1]=20;
	arr[2]=30;	===>	int[] arr={10,20,30};

			===>	char[] carr={'a','b','c'};

			===>	String[] sarr={"hi","hello","bye"};



Q) What is the difference between length and length() ?

length 
------
	It is applicable for arrays.
	It returns size of an array.
	ex:
		int[] arr=new int[3];	
		System.out.println(arr.length);

length()
--------
	It is applicable for String objects.
	It returns number characters present in a string.
	ex:
		String str="ihub";
		System.out.println(str.length());// 4

Single Dimensional Array Programs 
==================================


Q) Write a java program to accept some array elements and display them?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter the array size :");
		int size = sc.nextInt(); // 5
		
		int[] arr = new int[size];
		
		//insert elements 
		for(int i=0;i<arr.length;i++)
		{
			System.out.println("Enter the element :");
			arr[i]=sc.nextInt();
		}
		
		//read elements 
		for(int i=0;i<arr.length;i++)
		{
			System.out.print(arr[i]+" ");
		}

	}
}


for each loop 
==================
It is used to iterate the elements/objects from arrays/collections.

syntax:
------
	for(variable var : array_variable)
	{
		-
		- // code to be execute 
		-
	}


Q) Write a java program to display array elements from given array?

input:
	5 9 1 3 6 4 

ex:
--
class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr={5,9,1,3,6,4};
		
		//for each loop
		for(int i:arr)
		{
			System.out.print(i+" ");	
		}
	}
}

Q) Write a java program to perform sum of array elements?

input:
	5 9 1 3 6 4 
output:
	28

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr={5,9,1,3,6,4};
		
		//for each loop
		int sum =0;
		for(int i : arr)
		{
			sum += i;
		}
		
		System.out.println(sum);
	}
}


Q) Write a java program to display array elements in reverse order?

input:
	5 9 1 3 6 4 
output:
	4 6 3 1 9 5 


class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr={5,9,1,3,6,4};
		
		//reading reverse 
		for(int i = arr.length-1;i>=0;i--)
		{
			System.out.print(arr[i]+" ");
		}
	}
}


Q) Write a java program to copy an array?

input:
	5 9 1 3 6 4 
	

class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr1={5,9,1,3,6,4};
		
		int[] arr2=new int[arr1.length];
		
		//for each loop 
		int j=0;
		for(int i:arr1)
		{
			arr2[j++]=i;
		}
		
		//for each loop
		//display elements 
		for(int i:arr2)
		{
			System.out.print(i+" ");
		}
	}
}

approach2
---------
class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr1={5,9,1,3,6,4};
		
		int[] arr2=arr1;
		
		for(int i:arr1)
		{
			System.out.print(i+" ");
		}
		
		System.out.println("\n==================");
		
		for(int i:arr2)
		{
			System.out.print(i+" ");
		}
		
	}
}

Q) Write a java program to display array elements in sorting order?

input:
	5 9 1 3 6 4 

output:
	1 3 4 5 6 9 


import java.util.Arrays;
class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr={5,9,1,3,6,4};
		
		Arrays.sort(arr);
		
		System.out.println(Arrays.toString(arr)); // [1, 3, 4, 5, 6, 9]
		
		/*
		for(int i : arr)
		{
			System.out.print(i+" ");
		}
		*/
	}
}

Q) Write a java program to display array elements in sorting order without using sort() method?

input:
	5 9 1 3 6 4 

output:
	1 3 4 5 6 9 


class Test  
{
	public static void main(String[] args) 
	{
		
		int[] arr={5,9,1,3,6,4};
		
		//ascending order 
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr.length;j++)
			{
				if(arr[i]<arr[j])
				{
					int temp=arr[i];
					arr[i]=arr[j];
					arr[j]=temp;
				}
			}
		}
		
		//display 
		for(int i :arr)
		{
			System.out.print(i+" ");
		}
	}
}







































































