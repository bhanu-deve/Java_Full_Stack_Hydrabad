form.html
=========

<form action="test" method="POST" enctype="multipart/form-data">

	File1 : <input type="file" name="f1"/> <br>
	
	File2 : <input type="file" name="f2"/> <br>
	
	<input type="submit" value="upload"/>

</form>


web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
 	<welcome-file-list>
 		<welcome-file>form.html</welcome-file>
 	</welcome-file-list>
 
</web-app>

TestSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import javazoom.upload.MultipartFormDataRequest;
import javazoom.upload.UploadBean;

@WebServlet("/test")
public class TestSrv extends HttpServlet
{
	protected void doPost(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw = res.getWriter();
		res.setContentType("text/html");
		
		//file uploading 
		try
		{
			UploadBean ub = new UploadBean();
			ub.setFolderstore("D:\\store");
			ub.setOverwrite(false);
			
			MultipartFormDataRequest nreq = new MultipartFormDataRequest(req);
			ub.store(nreq);
			
			pw.println("<center><h1>Files Uploaded</h1></center>");
		}
		catch(Exception e)
		{
			pw.println(e);
		}
		
		pw.close();
	}
}

Request url
----------
	http://localhost:2525/UploadApp/




Servlet to Servlet Communication 
=================================
Servlet to servlet communication is possible by using three ways.

1) Forwarding the request 

2) Including the response 

3) Send Redirection 


1) Forwarding the request
-------------------------
In forwarding the request, the output of source servlets program will be discarded and output of destination servlets program goes to browser window as dynamic response.

To the forward the request we need to use RequestDispatcher.

RequestDispatcher is an interface which is present in javax.servlet package.

We can create RequestDispatcher object as follow.

ex:
	RequestDispatcher rd = req.getRequestDispatcher();


2) Including the response 
-------------------------
In including the response, the output of source servlets program and output of destination servlets program combinely go to browser window as dynamic response.

To perform including the response we need to use RequestDispatcher object.

RequestDispatcher is an interface which is present in javax.servlet package.

We can create RequestDispatcher object as follow.

ex:
	RequestDispatcher rd = req.getRequestDispatcher();


Deployment Directory Structure 
------------------------------
STSApp1 
|
|---Java Resources
|	|
	|---com.ihub.www
		|
		|---TestSrv1.java                    
		|---TestSrv2.java
|
|---WebContent 
	|
	|---form.html 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
---------
<form action="test1">
	
	<table align="center">
		<tr>
				<td>UserName:</td>
				<td><input type="text" name="t1"/></td>
		</tr>
		<tr>
				<td>Password:</td>
				<td><input type="password" name="t2"/></td>
		</tr>
		<tr>
				<td><input type="reset" value="reset"/></td>
				<td><input type="submit" value="submit"/></td>
		</tr>
	</table>
	
</form>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/test1")
public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw =res.getWriter();
		res.setContentType("text/html");
		
		//reading form inputs 
		String name = req.getParameter("t1");
		String pass = req.getParameter("t2");
		
		if(pass.equals("admin"))
		{
			RequestDispatcher rd = req.getRequestDispatcher("test2");
			rd.forward(req, res);
		}
		else
		{
			pw.println("<center><b style='color:red'>Sorry! Incorrect username or password</b></center>");
			RequestDispatcher rd = req.getRequestDispatcher("form.html");
			rd.include(req, res);
		}
		pw.close();
	}
}

TestSrv2.java
--------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/test2")
public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw =res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<center><h1>Login Done Successfully</h1></center>");
		
		pw.close();
	}
}

Request url
-----------
	http://localhost:2525/STSApp1/



3) Send Redirection 
===================
It is used to forward the request to the application which is present in same server or different server.

It is used to send the response and errors to other resources.

To perform redirection we need to use sendRedirect() method of HttpServletResponse object.
ex:
	res.sendRedirect("url");

Deployment Directory Structure 
------------------------------
STSApp2
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv.java
|---WebContent 
	|
	|---index.html 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.html
----------

<center>
	<h1>
		<a href="test?t1=flights"> Flights </a>
	</h1>
	<h1>
		<a href="test?t1=hotels"> Hotels </a>
	</h1>
	<h1>
		<a href="test?t1=railways"> Trains </a>
	</h1>
</center>

web.xml 
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
</web-app>

TestSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/test")
public class TestSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw = res.getWriter();
		res.setContentType("text/html");
		
		String value = req.getParameter("t1");
		
		res.sendRedirect("https://www.makemytrip.com/"+value);
		
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/STSApp2/









	

































 






















